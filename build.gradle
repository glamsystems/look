buildscript {
  repositories {
    maven { url = 'https://plugins.gradle.org/m2/' }
    mavenCentral()
  }
  dependencies {
    // https://plugins.gradle.org/plugin/org.beryx.jlink
    classpath "org.beryx:badass-jlink-plugin:3.1.1"
  }
}

ext {
  VERSION = project.findProperty('version')
  VCS_URL = 'https://github.com/glamsystems/look'
}

final JLV = JavaLanguageVersion.of(project.findProperty('targetJava') as Integer ?: 23)

subprojects {
  apply plugin: 'java'

  project.group = 'systems.glam'
  project.version = "$VERSION"

  plugins.withType(JavaPlugin).configureEach {
    java {
      modularity.inferModulePath = true
      toolchain {
        languageVersion = JLV
      }
    }
  }

  repositories {
    maven {
      url = "https://maven.pkg.github.com/comodal/json-iterator"
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
        password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
      }
    }
    maven {
      url = "https://maven.pkg.github.com/sava-software/sava"
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
        password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
      }
    }
    maven {
      url = "https://maven.pkg.github.com/sava-software/solana-programs"
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
        password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
      }
    }
    maven {
      url = "https://maven.pkg.github.com/sava-software/anchor-src-gen"
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
        password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
      }
    }
    maven {
      url = "https://maven.pkg.github.com/sava-software/anchor-programs"
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
        password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
      }
    }
    mavenCentral()
  }

  dependencies {
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  }

  test {
    useJUnitPlatform()
    testLogging {
      events "passed", "skipped", "failed", "standardOut", "standardError"
      exceptionFormat = "full"
      showStandardStreams = true
    }
  }
}
